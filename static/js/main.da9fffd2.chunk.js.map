{"version":3,"sources":["context/data-context.js","Components/Findip.js","Pages/Enterip.js","Components/map.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","React","createContext","DataContextProvider","props","useState","data","setData","Provider","value","children","Findip","rep","setRes","useContext","API_KEY","console","log","process","url","inputIp","useEffect","axios","get","then","response","catch","err","error","fetchedData","key","push","length","className","style","city","region","postalCode","timezone","name","Enterip","customIp","setCustomIp","dat","setDat","Fragment","onSubmit","event","preventDefault","placeholder","type","onChange","target","size","Map","title","frameBorder","scrolling","marginHeight","marginWidth","src","lat","toString","lng","App","location","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da9fffd2.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nexport const DataContext=React.createContext(null);\r\n\r\nconst DataContextProvider=props=>{\r\nconst[data,setData]=useState({\"location\":{\r\n    \"lat\":\"37.38605\",\r\n    \"lng\":\"-122.08385\"\r\n}});\r\n\r\nreturn(\r\n    <DataContext.Provider value={{data,setData}} >\r\n    {props.children}\r\n    </DataContext.Provider>\r\n)\r\n}\r\n\r\nexport default DataContextProvider;","import React,{useEffect, useState, useContext} from 'react';\r\nimport {DataContext} from \"../context/data-context\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Findip.css\";\r\n\r\nconst Findip=(props)=>{\r\n    const[rep,setRes]=useState(\"\");\r\n    const {data,setData}=useContext(DataContext);\r\n\r\n  const API_KEY=`at_TTqX8kpNQ4AX98gSnoAb7D3NxbwD4`;\r\n  console.log(process.env.REACT_APP_UNSPLASH_KEY);\r\n  const url=`https://geo.ipify.org/api/v1?apiKey=${API_KEY}&ipAddress=${props.inputIp}`; \r\n  \r\n  useEffect(()=>{\r\n    axios.get(url)\r\n    .then(response=>{\r\n      setRes(response.data);\r\n        setData(response.data);\r\n    }).catch(err=>console.error(err))\r\n     \r\n  },[props.inputIp,API_KEY])\r\n\r\n  const fetchedData=[];\r\n\r\n  if(rep){\r\n    for(let key in rep){\r\n        fetchedData.push(rep[key]);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return(<div  >\r\n      {fetchedData.length>0 && (\r\n      <div className=\"add_details\" >\r\n\r\n        <div className=\"box_content\"><p>IP ADDRESS</p><h1>{fetchedData[0]}</h1></div>\r\n        <div className=\"box_content last_two\" style={{\"width\":\"300px\"}} ><p>LOCATION</p><h1 >{fetchedData[1].city+\",\"+fetchedData[1].region+\" \"+fetchedData[1].postalCode}</h1></div>\r\n        <div className=\"box_content \"><p>TIMEZONE</p><h1>{\"UTC \"+fetchedData[1].timezone}</h1></div>\r\n        <div className=\"box_content last_two\"><p>ISP</p><h1>{fetchedData[3].name}</h1></div>\r\n\r\n      </div>) }\r\n      \r\n  </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Findip;","import React,{useState,useContext} from 'react';\r\nimport Findip from \"../Components/Findip\";\r\n\r\nimport \"./Enterip.css\";\r\n\r\nconst Enterip=()=>{ \r\nconst[customIp,setCustomIp]=useState(\"\");  \r\nconst[dat,setDat]=useState(\"\");\r\n\r\nconst inputIP=(event)=>{\r\n    setCustomIp(event.target.value);\r\n    setDat(\"\");\r\n}\r\n\r\nconst submitHandler=(event)=>{\r\nevent.preventDefault();\r\nsetDat(customIp);\r\n}\r\n\r\nreturn(<React.Fragment>\r\n    <h1 className=\"head_1\" >\r\n        IP Address Tracker\r\n    </h1>\r\n    <form onSubmit={submitHandler} className=\"form_input\" >\r\n    <input placeholder=\"Search for any IP address\" type=\"text\" value={customIp}  onChange={inputIP} size=\"40\" className=\"input_ip\" />\r\n    <button className=\"btn\" type=\"submit\" >></button>\r\n    </form>\r\n    <div className=\"details\" >\r\n    <Findip inputIp={dat} />\r\n    </div>\r\n    \r\n    </React.Fragment>\r\n);\r\n}\r\n\r\nexport default Enterip;","import React from 'react';\r\nimport './map.css';\r\n\r\nconst Map=(props)=>{\r\nreturn(\r\n    <div>\r\n\r\n  <iframe title=\"map\"  frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\" \r\nsrc={'https://maps.google.com/maps?q='\r\n + props.lat.toString() + \r\n ','\r\n  + props.lng.toString() + \r\n  '&t=&z=15&ie=UTF8&iwloc=&output=embed'}></iframe>\r\n\r\n  <script type='text/javascript' \r\n  src='https://embedmaps.com/google-maps-authorization/script.js?id=5a33be79e53caf0a07dfec499abf84b7b481f165'>\r\n</script>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Map;","import { useContext } from \"react\";\nimport Enterip from './Pages/Enterip';\nimport Map from \"./Components/map\";\nimport {DataContext} from \"./context/data-context\";\nimport './App.css';\n\n\nfunction App() {\n  const {data,setData}=useContext(DataContext);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Enterip />\n      </header>\n      <div className=\"map_embed\" >\n        <Map  lat={data.location.lat} lng={data.location.lng}  />\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DataContextProvider from \"./context/data-context\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <DataContextProvider><App /></DataContextProvider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}